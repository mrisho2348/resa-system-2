# Generated by Django 4.2.9 on 2024-05-22 23:06

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[(1, 'AdminHOD'), (2, 'Staffs')], default=1, max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_groups', related_query_name='user', to='auth.group', verbose_name='Groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_user_permissions', related_query_name='user', to='auth.permission', verbose_name='User permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AmbulanceActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AmbulanceRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_location', models.CharField(max_length=100)),
                ('to_location', models.CharField(max_length=100)),
                ('distance', models.FloatField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('advanced_ambulance_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.FloatField(editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AmbulanceVehicleOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(blank=True, max_length=100, null=True)),
                ('activities', models.CharField(blank=True, max_length=255, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ambulance_number', models.CharField(blank=True, max_length=100, null=True)),
                ('organization', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.IntegerField()),
                ('days', models.IntegerField()),
                ('payment_mode', models.CharField(blank=True, max_length=100, null=True)),
                ('order_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('registration_number', models.CharField(max_length=50, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(max_length=50)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True, null=True)),
                ('date_registered', models.DateField(auto_now_add=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/')),
            ],
        ),
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Completed'), (2, 'Canceled'), (3, 'Rescheduled'), (4, 'No-show'), (5, 'In Progress'), (6, 'Confirmed'), (7, 'Arrived')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment_number', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('subscribe_newsletter', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeductionOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis_name', models.CharField(max_length=255, unique=True)),
                ('diagnosis_code', models.CharField(default='', max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiseaseRecode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease_name', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(max_length=25, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('department', models.CharField(max_length=100)),
                ('employment_type', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Contract', 'Contract')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('bank_account_number', models.CharField(max_length=30)),
                ('account_holder_name', models.CharField(blank=True, max_length=100, null=True)),
                ('tin_number', models.CharField(blank=True, max_length=20, null=True)),
                ('nssf_membership_number', models.CharField(blank=True, max_length=20, null=True)),
                ('nhif_number', models.CharField(blank=True, max_length=20, null=True)),
                ('wcf_number', models.CharField(blank=True, max_length=20, null=True)),
                ('tra_deduction_status', models.BooleanField(default=False)),
                ('nssf_deduction_status', models.BooleanField(default=False)),
                ('wcf_deduction_status', models.BooleanField(default=False)),
                ('heslb_deduction_status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.bankaccount')),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('manufacturer', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=50)),
                ('acquisition_date', models.DateField(blank=True, null=True)),
                ('warranty_expiry_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HospitalVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
                ('plate_number', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('vehicle_type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InsuranceCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=15)),
                ('short_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
                ('website', models.URLField(default='http://example.com')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.PositiveIntegerField()),
                ('description', models.TextField(blank=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('location_in_storage', models.CharField(blank=True, max_length=100)),
                ('min_stock_level', models.PositiveIntegerField(blank=True, null=True)),
                ('images_attachments', models.ImageField(blank=True, null=True, upload_to='inventory/images/')),
                ('condition', models.CharField(blank=True, max_length=50)),
                ('remain_quantity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.category')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50, unique=True)),
                ('date', models.DateField()),
                ('due_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending'), ('overdue', 'Overdue')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.client')),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_name', models.CharField(max_length=100)),
                ('drug_type', models.CharField(blank=True, max_length=20, null=True)),
                ('formulation_unit', models.CharField(max_length=50)),
                ('manufacturer', models.CharField(max_length=100)),
                ('remain_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('dividable', models.CharField(blank=True, max_length=20, null=True)),
                ('batch_number', models.CharField(default=12345, max_length=20, unique=True)),
                ('expiration_date', models.DateField()),
                ('cash_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('insurance_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('nhif_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('buying_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_buying_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicineRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('explanation', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicineUnitMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(default='', max_length=20)),
                ('application_user', models.CharField(default='', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PathodologyRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mrn', models.CharField(editable=False, max_length=20, unique=True)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('middle_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.TextField()),
                ('payment_form', models.CharField(choices=[('Cash', 'Cash'), ('Insurance', 'Insurance')], max_length=255)),
                ('insurance_name', models.CharField(default='', max_length=255)),
                ('insurance_number', models.CharField(blank=True, max_length=255, null=True)),
                ('emergency_contact_name', models.CharField(default='', max_length=100)),
                ('emergency_contact_relation', models.CharField(default='', max_length=100)),
                ('emergency_contact_phone', models.CharField(default='0657315955', max_length=20)),
                ('marital_status', models.CharField(max_length=255)),
                ('patient_type', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nationality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.country')),
            ],
        ),
        migrations.CreateModel(
            name='PatientVisits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vst', models.CharField(editable=False, max_length=20, unique=True)),
                ('visit_type', models.CharField(choices=[('Normal', 'Normal'), ('Emergency', 'Emergency'), ('Referral', 'Referral'), ('Follow up', 'Follow up')], max_length=15)),
                ('visit_reason', models.TextField(blank=True, null=True)),
                ('referral_number', models.CharField(blank=True, max_length=50, null=True)),
                ('primary_service', models.CharField(max_length=50)),
                ('insurance_number', models.CharField(blank=True, max_length=50, null=True)),
                ('insurance_name', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_scheme', models.CharField(blank=True, max_length=50, null=True)),
                ('authorization_code', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
            ],
            options={
                'verbose_name': 'Visit',
                'verbose_name_plural': 'Visits',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payroll_date', models.DateField()),
                ('total_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('processed', 'Processed'), ('pending', 'Pending'), ('canceled', 'Canceled')], max_length=20)),
                ('details', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.paymentmethod')),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionFrequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('interval', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reagent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('manufacturer', models.CharField(max_length=100)),
                ('lot_number', models.CharField(max_length=50)),
                ('storage_conditions', models.TextField(blank=True)),
                ('quantity_in_stock', models.PositiveIntegerField()),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('remaining_quantity', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RemoteAmbulanceActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, editable=False, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RemoteAmbulanceRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_location', models.CharField(max_length=100)),
                ('to_location', models.CharField(max_length=100)),
                ('distance', models.FloatField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('advanced_ambulance_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.FloatField(editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RemoteAmbulanceVehicleOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(blank=True, max_length=100, null=True)),
                ('activities', models.CharField(blank=True, max_length=255, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ambulance_number', models.CharField(blank=True, max_length=100, null=True)),
                ('organization', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('duration', models.IntegerField()),
                ('days', models.IntegerField()),
                ('payment_mode', models.CharField(blank=True, max_length=100, null=True)),
                ('order_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RemoteCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('industry', models.CharField(default='', max_length=50)),
                ('sector', models.CharField(default='', max_length=50)),
                ('headquarters', models.CharField(default='', max_length=100)),
                ('Founded', models.CharField(default='', max_length=10)),
                ('Notes', models.TextField(default='', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RemoteEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('serial_number', models.CharField(max_length=255, unique=True)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('purchase_date', models.DateField()),
                ('warranty_expiry_date', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Operational', 'Operational'), ('Under Maintenance', 'Under Maintenance'), ('Out of Service', 'Out of Service')], default='Operational', max_length=50)),
                ('date_added', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RemoteHospitalVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=50)),
                ('plate_number', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('vehicle_type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RemoteMedicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_name', models.CharField(max_length=100)),
                ('drug_type', models.CharField(blank=True, max_length=20, null=True)),
                ('formulation_unit', models.CharField(max_length=50)),
                ('manufacturer', models.CharField(max_length=100)),
                ('remain_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('dividable', models.CharField(blank=True, max_length=20, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=20, null=True)),
                ('expiration_date', models.DateField()),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('buying_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('total_buying_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RemotePatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mrn', models.CharField(editable=False, max_length=20, unique=True, verbose_name='MRN')),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(max_length=20)),
                ('osha_certificate', models.BooleanField(default=False)),
                ('date_of_osha_certification', models.DateField(blank=True, null=True)),
                ('insurance', models.CharField(choices=[('Uninsured', 'Uninsured'), ('Insured', 'Insured'), ('Unknown', 'Unknown')], max_length=20)),
                ('insurance_company', models.CharField(blank=True, max_length=100, null=True)),
                ('other_insurance_company', models.CharField(blank=True, max_length=100, null=True)),
                ('insurance_number', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_name', models.CharField(max_length=100)),
                ('emergency_contact_relation', models.CharField(blank=True, max_length=100, null=True)),
                ('other_emergency_contact_relation', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_phone', models.CharField(max_length=20)),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], default='Single', max_length=20)),
                ('occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('other_occupation', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_type', models.CharField(blank=True, max_length=100, null=True)),
                ('other_patient_type', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotecompany')),
                ('nationality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.country')),
            ],
        ),
        migrations.CreateModel(
            name='RemotePatientVisits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vst', models.CharField(editable=False, max_length=20, unique=True)),
                ('visit_type', models.CharField(choices=[('Normal', 'Normal'), ('Emergency', 'Emergency'), ('Referral', 'Referral'), ('Follow up', 'Follow up')], max_length=15)),
                ('primary_service', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
            ],
            options={
                'verbose_name': 'Visit',
                'verbose_name_plural': 'Visits',
            },
        ),
        migrations.CreateModel(
            name='RemoteReagent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('supplier', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.PositiveIntegerField()),
                ('expiry_date', models.DateField()),
                ('storage_conditions', models.TextField(blank=True, null=True)),
                ('date_received', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RemoteService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225, unique=True)),
                ('description', models.TextField(default='')),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type_service', models.CharField(blank=True, choices=[('Procedure', 'Procedure'), ('Laboratory', 'Laboratory'), ('Imaging', 'Imaging'), ('Drugs', 'Drugs'), ('Test', 'Test'), ('Consultation', 'Consultation'), ('Education', 'Education'), ('Examination', 'Examination'), ('Vaccination', 'Vaccination'), ('Medication', 'Medication'), ('Therapy', 'Therapy'), ('Rehabilitation', 'Rehabilitation'), ('Rental', 'Rental'), ('Plan', 'Plan')], max_length=200, null=True)),
                ('coverage', models.CharField(blank=True, choices=[('Cash', 'Cash'), ('Insurance', 'Insurance')], max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cash_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('insurance_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('nhif_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('department', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.CharField(default='', max_length=100)),
                ('contact_information', models.CharField(default='', max_length=100)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UsageHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_date', models.DateField()),
                ('quantity_used', models.PositiveIntegerField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.inventoryitem')),
            ],
        ),
        migrations.CreateModel(
            name='Staffs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('middle_name', models.TextField(blank=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('non-binary', 'Non-Binary'), ('prefer-not-to-say', 'Prefer Not to Say')], max_length=20)),
                ('date_of_birth', models.DateField(blank=True, default='2000-01-01')),
                ('phone_number', models.CharField(blank=True, max_length=14)),
                ('marital_status', models.CharField(blank=True, choices=[('single', 'Single'), ('married', 'Married'), ('divorced', 'Divorced'), ('widowed', 'Widowed')], max_length=20)),
                ('profession', models.CharField(blank=True, choices=[('doctor', 'Doctor'), ('nurse', 'Nurse'), ('pharmacist', 'Pharmacist'), ('developer', 'Developer'), ('designer', 'Designer'), ('manager', 'Manager'), ('radiologist', 'Radiologist'), ('lab_technician', 'Lab Technician'), ('receptionist', 'Receptionist'), ('physiotherapist', 'Physiotherapist'), ('accountant', 'Accountant'), ('security_guard', 'Security Guard'), ('chef', 'Chef'), ('cleaner', 'Cleaner')], max_length=20)),
                ('role', models.CharField(blank=True, choices=[('admin', 'Administrator'), ('doctor', 'Doctor'), ('nurse', 'Nurse'), ('physiotherapist', 'Physiotherapist'), ('labTechnician', 'Lab Technician'), ('pharmacist', 'Pharmacist'), ('receptionist', 'Receptionist')], max_length=20)),
                ('work_place', models.CharField(blank=True, choices=[('resa', 'Resa'), ('kahama', 'Kahama')], max_length=50)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SecondaryPhysicalExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heent', models.CharField(blank=True, max_length=50, null=True)),
                ('cns', models.CharField(blank=True, max_length=50, null=True)),
                ('normal_cns', models.CharField(blank=True, max_length=50, null=True)),
                ('abnormal_cns', models.CharField(blank=True, max_length=50, null=True)),
                ('cvs', models.CharField(blank=True, max_length=50, null=True)),
                ('normal_cvs', models.CharField(blank=True, max_length=50, null=True)),
                ('abnormal_cvs', models.CharField(blank=True, max_length=50, null=True)),
                ('rs', models.CharField(blank=True, max_length=50, null=True)),
                ('normal_rs', models.CharField(blank=True, max_length=50, null=True)),
                ('abnormal_rs', models.CharField(blank=True, max_length=50, null=True)),
                ('pa', models.CharField(blank=True, max_length=50, null=True)),
                ('normal_pa', models.CharField(blank=True, max_length=50, null=True)),
                ('abnormal_pa', models.CharField(blank=True, max_length=50, null=True)),
                ('gu', models.CharField(blank=True, max_length=100, null=True)),
                ('normal_gu', models.CharField(blank=True, max_length=100, null=True)),
                ('abnormal_gu', models.CharField(blank=True, max_length=100, null=True)),
                ('mss', models.CharField(blank=True, max_length=100, null=True)),
                ('normal_mss', models.CharField(blank=True, max_length=100, null=True)),
                ('abnormal_mss', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='SalaryPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField()),
                ('payment_status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending'), ('failed', 'Failed')], max_length=20)),
                ('payment_details', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.employee')),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.payroll')),
            ],
            options={
                'verbose_name': ' Salary Payment',
            },
        ),
        migrations.CreateModel(
            name='SalaryChangeRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('new_salary', models.DecimalField(decimal_places=2, max_digits=10)),
                ('change_date', models.DateField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.employee')),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.payroll')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteReferral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_location', models.CharField(default='resa medical hospital', help_text='Source location of the patient', max_length=255)),
                ('destination_location', models.CharField(help_text='Destination location for MedEvac', max_length=255)),
                ('rfn', models.CharField(editable=False, max_length=20, unique=True)),
                ('notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('nature_of_referral', models.CharField(choices=[('Med Evac', 'Med Evac'), ('Referred', 'Referral')], default='Referred', max_length=20)),
                ('transport_model', models.CharField(choices=[('Ground Ambulance', 'Ground Ambulance'), ('Air Ambulance', 'Air Ambulance'), ('Private Vehicle', 'Private Vehicle'), ('Self Transport', 'Self Transport'), ('Company Walking', 'Company Walking'), ('Walking', 'Walking'), ('Motorcycle', 'Motorcycle'), ('Others', 'Others'), ('Unknown', 'Unknown')], default='Ground Ambulance', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('result', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='procedure_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remoteservice')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemotePrescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prs_no', models.CharField(editable=False, max_length=20, unique=True)),
                ('dose', models.CharField(max_length=50)),
                ('duration', models.CharField(max_length=50)),
                ('quantity_used', models.PositiveIntegerField()),
                ('verified', models.CharField(choices=[('verified', 'Verified'), ('not_verified', 'Not Verified')], default='not_verified', max_length=20)),
                ('issued', models.CharField(choices=[('issued', 'Issued'), ('not_issued', 'Not Issued')], default='not_issued', max_length=20)),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'Unpaid')], default='unpaid', max_length=20)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('frequency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.prescriptionfrequency')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotemedicine')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemotePatientVital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('respiratory_rate', models.PositiveIntegerField(blank=True, help_text='Respiratory rate in breaths per minute', null=True)),
                ('pulse_rate', models.PositiveIntegerField(blank=True, help_text='Pulse rate in beats per minute', null=True)),
                ('sbp', models.PositiveIntegerField(blank=True, help_text='Systolic Blood Pressure (mmHg)', null=True)),
                ('dbp', models.PositiveIntegerField(blank=True, help_text='Diastolic Blood Pressure (mmHg)', null=True)),
                ('blood_pressure', models.CharField(blank=True, help_text="Blood pressure measurement in format 'SBP/DBP'", max_length=7, null=True)),
                ('spo2', models.PositiveIntegerField(blank=True, help_text='SPO2 measurement in percentage', null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, default=37.5, help_text='Temperature measurement in Celsius', max_digits=3, null=True)),
                ('gcs', models.PositiveIntegerField(blank=True, help_text='Glasgow Coma Scale measurement', null=True)),
                ('avpu', models.CharField(blank=True, help_text='AVPU scale measurement', max_length=20, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemotePatientDiagnosisRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('final_diagnosis', models.ManyToManyField(related_name='final_diagnosis_records', to='clinic.diagnosis')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('provisional_diagnosis', models.ManyToManyField(related_name='provisional_diagnosis_records', to='clinic.diagnosis')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('order_type', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_read', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid')], default='Unpaid', max_length=100)),
                ('order_number', models.CharField(max_length=12, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remote_doctor', to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteObservationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remote_data_recorder', to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteLaboratoryOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('lab_number', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remote_lab_data_recorder', to='clinic.staffs')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remoteservice')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteDischargesNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discharge_condition', models.CharField(max_length=255)),
                ('discharge_notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('discharge_date', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteCounseling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('counselling_notes', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteConsultationOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remoteservice')),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remote_consultation_data_recorder', to='clinic.staffs')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteConsultationNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history_of_presenting_illness', models.TextField(blank=True, null=True)),
                ('type_of_illness', models.CharField(blank=True, max_length=200, null=True)),
                ('nature_of_current_illness', models.CharField(blank=True, max_length=200, null=True)),
                ('consultation_number', models.CharField(max_length=20, unique=True)),
                ('doctor_plan', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('pathology', models.ManyToManyField(blank=True, to='clinic.pathodologyrecord')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Completed'), (2, 'Canceled'), (3, 'Rescheduled'), (4, 'No-show'), (5, 'In Progress'), (6, 'Confirmed'), (7, 'Arrived')], default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remote_created_consultations', to='clinic.staffs')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('pathodology_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.pathodologyrecord')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='RemoteAmbulanceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=100)),
                ('from_location', models.CharField(max_length=100)),
                ('to_location', models.CharField(max_length=100)),
                ('order_date', models.DateField(blank=True, null=True)),
                ('age', models.CharField(max_length=50)),
                ('condition', models.CharField(max_length=100)),
                ('intubation', models.CharField(max_length=100)),
                ('pregnancy', models.CharField(max_length=100)),
                ('oxygen', models.CharField(max_length=100)),
                ('ambulance_type', models.CharField(max_length=100)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_mode', models.CharField(max_length=100)),
                ('duration_hours', models.IntegerField()),
                ('duration_days', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ambulance_number', models.CharField(max_length=20, unique=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='remote_ambulance_data_recorder', to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_location', models.CharField(default='resa medical hospital', help_text='Source location of the patient', max_length=255)),
                ('destination_location', models.CharField(help_text='Destination location for MedEvac', max_length=255)),
                ('reason', models.TextField()),
                ('referral_date', models.DateField(auto_now_add=True, help_text='Date when the referral was made')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about the referral', null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='ReagentUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_date', models.DateField()),
                ('quantity_used', models.PositiveIntegerField()),
                ('observation', models.TextField()),
                ('technician_notes', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lab_technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('reagent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.reagent')),
            ],
        ),
        migrations.CreateModel(
            name='QualityControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('control_date', models.DateField()),
                ('control_type', models.CharField(max_length=50)),
                ('result', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('remarks', models.TextField(blank=True)),
                ('lab_technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
            ],
        ),
        migrations.CreateModel(
            name='Procedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('order_date', models.DateField(blank=True, null=True)),
                ('result', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('equipments_used', models.CharField(max_length=255)),
                ('procedure_number', models.CharField(max_length=20, unique=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='procedure_data_recorder', to='clinic.staffs')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.service')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryPhysicalExamination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('airway', models.CharField(blank=True, max_length=200, null=True)),
                ('patent_airway', models.CharField(blank=True, max_length=200, null=True)),
                ('notpatient_explanation', models.TextField(blank=True, null=True)),
                ('breathing', models.CharField(blank=True, max_length=200, null=True)),
                ('normal_breathing', models.TextField(blank=True, null=True)),
                ('abnormal_breathing', models.CharField(blank=True, max_length=200, null=True)),
                ('circulating', models.CharField(blank=True, max_length=200, null=True)),
                ('normal_circulating', models.TextField(blank=True, null=True)),
                ('abnormal_circulating', models.CharField(blank=True, max_length=200, null=True)),
                ('gcs', models.CharField(blank=True, max_length=200, null=True)),
                ('rbg', models.CharField(blank=True, max_length=200, null=True)),
                ('pupil', models.CharField(blank=True, max_length=200, null=True)),
                ('pain_score', models.CharField(blank=True, max_length=200, null=True)),
                ('avpu', models.CharField(blank=True, max_length=200, null=True)),
                ('exposure', models.CharField(blank=True, max_length=200, null=True)),
                ('normal_exposure', models.CharField(blank=True, max_length=200, null=True)),
                ('abnormal_exposure', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dose', models.CharField(max_length=50)),
                ('frequency', models.CharField(max_length=50)),
                ('duration', models.CharField(max_length=50)),
                ('quantity_used', models.PositiveIntegerField()),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('verified', models.CharField(choices=[('verified', 'Verified'), ('Not Verified', 'Not Verified')], default='Not Verified', max_length=20)),
                ('issued', models.CharField(choices=[('issued', 'Issued'), ('Not Issued', 'Not Issued')], default='Not Issued', max_length=20)),
                ('status', models.CharField(choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid')], default='Unpaid', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.medicine')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.invoice')),
                ('method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.paymentmethod')),
            ],
        ),
        migrations.CreateModel(
            name='PatientVital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_at', models.DateTimeField(auto_now_add=True)),
                ('respiratory_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Respiratory rate in breaths per minute', max_digits=5, null=True)),
                ('pulse_rate', models.PositiveIntegerField(blank=True, help_text='Pulse rate in beats per minute', null=True)),
                ('blood_pressure', models.CharField(blank=True, help_text='Blood pressure measurement', max_length=20, null=True)),
                ('spo2', models.DecimalField(blank=True, decimal_places=2, help_text='SPO2 measurement in percentage', max_digits=5, null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, help_text='Temperature measurement in Celsius', max_digits=5, null=True)),
                ('gcs', models.PositiveIntegerField(blank=True, help_text='Glasgow Coma Scale measurement', null=True)),
                ('avpu', models.CharField(blank=True, help_text='AVPU scale measurement', max_length=20, null=True)),
                ('weight', models.CharField(blank=True, help_text='weight', max_length=20, null=True)),
                ('unique_identifier', models.CharField(editable=False, max_length=20, unique=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('recorded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='PatientSurgery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surgery_name', models.CharField(blank=True, max_length=100, null=True)),
                ('surgery_date', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remote_patient_surgery', to='clinic.remotepatient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientMedicationAllergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medicine_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remote_medicine', to='clinic.remotemedicine')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remote_medication_allergies', to='clinic.remotepatient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientLifestyleBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekly_exercise_frequency', models.CharField(blank=True, max_length=10, null=True)),
                ('smoking', models.CharField(blank=True, max_length=10, null=True)),
                ('alcohol_consumption', models.CharField(blank=True, max_length=10, null=True)),
                ('healthy_diet', models.CharField(blank=True, max_length=10, null=True)),
                ('stress_management', models.CharField(blank=True, max_length=10, null=True)),
                ('sufficient_sleep', models.CharField(blank=True, max_length=10, null=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientHealthCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('health_condition', models.CharField(blank=True, max_length=200, null=True, verbose_name='Health Condition')),
                ('health_condition_notes', models.CharField(blank=True, max_length=200, null=True, verbose_name='Health Condition Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remote_health_conditions', to='clinic.remotepatient', verbose_name='Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(blank=True, default=django.utils.timezone.now, null=True)),
                ('order_type', models.TextField(blank=True, null=True)),
                ('type_of_order', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_read', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid')], default='Unpaid', max_length=100)),
                ('order_number', models.CharField(max_length=12, unique=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor', to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationMedicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_read', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='MedicineInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('remain_quantity', models.PositiveIntegerField(default=0)),
                ('purchase_date', models.DateField()),
                ('total_payment', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.medicine')),
            ],
        ),
        migrations.CreateModel(
            name='LaboratoryOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('order_date', models.DateField(blank=True, null=True)),
                ('result', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('lab_number', models.CharField(max_length=20, unique=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lab_data_recorder', to='clinic.staffs')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.service')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='supplier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.supplier'),
        ),
        migrations.CreateModel(
            name='ImagingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('result', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='imaging_records/')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='data_recorder', to='clinic.staffs')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('imaging', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.service')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='FamilyMedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(max_length=100, verbose_name='Condition')),
                ('relationship', models.CharField(blank=True, max_length=100, null=True, verbose_name='Relationship')),
                ('comments', models.CharField(blank=True, max_length=100, null=True, verbose_name='Comments')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remote_family_medical_history', to='clinic.remotepatient', verbose_name='Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('additional_details', models.TextField(blank=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='expense_receipts/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.expensecategory')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_date', models.DateField()),
                ('technician', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.equipment')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeDeduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deducted_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.employee')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.deductionorganization')),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.payroll')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs'),
        ),
        migrations.CreateModel(
            name='Counseling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('counselor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='ConsultationOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('consultation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.service')),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consultation_data_recorder', to='clinic.staffs')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='ConsultationNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.consultation')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
            ],
            options={
                'verbose_name': 'Consultation Notification',
                'verbose_name_plural': 'Consultation Notifications',
            },
        ),
        migrations.CreateModel(
            name='ConsultationNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chief_complaints', models.TextField(blank=True, null=True)),
                ('history_of_presenting_illness', models.TextField(blank=True, null=True)),
                ('consultation_number', models.CharField(max_length=20, unique=True)),
                ('physical_examination', models.TextField(blank=True, null=True)),
                ('allergy_to_medications', models.CharField(blank=True, max_length=255, null=True)),
                ('doctor_plan', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.staffs')),
                ('final_diagnosis', models.ManyToManyField(blank=True, related_name='final_diagnosis_notes', to='clinic.diagnosis')),
                ('pathology', models.ManyToManyField(blank=True, to='clinic.pathodologyrecord')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('provisional_diagnosis', models.ManyToManyField(blank=True, related_name='provisional_diagnosis_notes', to='clinic.diagnosis')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.AddField(
            model_name='consultation',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_consultations', to='clinic.staffs'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_consultations', to='clinic.staffs'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients'),
        ),
        migrations.AddField(
            model_name='consultation',
            name='visit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits'),
        ),
        migrations.CreateModel(
            name='ChiefComplaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('other_complaint', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('health_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.healthrecord')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatient')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.remotepatientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='AmbulanceOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=100)),
                ('from_location', models.CharField(max_length=100)),
                ('to_location', models.CharField(max_length=100)),
                ('order_date', models.DateField(blank=True, null=True)),
                ('age', models.CharField(max_length=50)),
                ('condition', models.CharField(max_length=100)),
                ('intubation', models.CharField(max_length=100)),
                ('pregnancy', models.CharField(max_length=100)),
                ('oxygen', models.CharField(max_length=100)),
                ('ambulance_type', models.CharField(max_length=100)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_mode', models.CharField(max_length=100)),
                ('duration_hours', models.IntegerField()),
                ('duration_days', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ambulance_number', models.CharField(max_length=20, unique=True)),
                ('data_recorder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ambulance_data_recorder', to='clinic.staffs')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic.patients')),
                ('visit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinic.patientvisits')),
            ],
        ),
        migrations.CreateModel(
            name='AdminHOD',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_hod', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
